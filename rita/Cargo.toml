[package]
name = "rita"
version = "0.5.58"
authors = ["Justin <justin@althea.net>", "Jehan <jehan.tremback@gmail.com>", "Ben <wangben3@gmail.com>"]
build = "build.rs"
edition = "2018"

[[bin]]
name = "rita_exit"
path = "src/exit.rs"

[[bin]]
name = "rita"
path = "src/client.rs"

[dependencies]
althea_kernel_interface = { path = "../althea_kernel_interface" }
althea_types = { path = "../althea_types", features = ["actix"]}
babel_monitor = { path = "../babel_monitor" }
clu = { path = "../clu" }
exit_db = { path = "../exit_db" }
num256 = "0.2"
settings = { path = "../settings" }
antenna_forwarding_client = {path = "../antenna_forwarding_client"}
auto-bridge = {path = "../auto_bridge"}
actix-web-httpauth = {git = "https://github.com/althea-net/actix-web-httpauth"}
clarity = "0.1"
web30 = {git = "https://github.com/althea-net/web30", rev = "4002ac7deca2e7ecbda76676705fcfcf29669b3e"}

# duplicate async dependencies, we are currently carrying both futures 0.1 and modern async/await dependencies
# these will be kept here for quite some time until the switch is completed.
async-web30 = {package="web30", git = "https://github.com/althea-net/web30", rev = "53d83bc74a0218eddc4221cf2fb6eefe49fba1d9" }
actix-async = {package="actix", version = "0.9"}
actix-web-async = {package="actix-web", version = "2.0", default_features = false, features= ["openssl"] }

actix = "0.7"
actix-web = { version = "0.7", default_features = false, features= ["ssl"] }
actix_derive = "0.5"
bytes = "0.5"
config = "0.10"
diesel = { version = "1.4", features = ["postgres", "r2d2"] }
docopt = "1.1"
dotenv = "0.15"
env_logger = "0.7"
failure = "0.1"
futures01 = { package = "futures", version = "0.1"}
futures = { version = "0.3", features = ["compat"] }
handlebars = "3.0"
ipnetwork = "0.14"
lazy_static = "1.4"
log = { version = "0.4", features = ["release_max_level_info"] }
minihttpse = "0.1"
mockito = "0.25"
mockstream = "0.0"
rand = "0.7"
serde = "1.0"
serde_derive = "1.0"
serde_json = "1.0"
tokio = "0.1"
tokio-io = "0.1"
tokio-codec = "0.1"
trust-dns-resolver = "0.10"
byteorder = { version = "1.3", features = ["i128"] }
openssl-probe = "0.1"
num-traits="0.2"
arrayvec = {version= "0.5", features = ["serde"]}
lettre = "0.9"
lettre_email = "0.9"
phonenumber = "0.2"
r2d2 = "0.8"
sha3 = "0.8"
hex-literal = "0.2"
sodiumoxide = "0.2"
compressed_log = "0.2"
flate2 = { version = "1.0", features = ["rust_backend"], default-features = false }
reqwest = { version = "0.10", features = ["blocking", "json"] }
jemallocator = {version = "0.3", optional = true}
# we don't call or us OpenSSL directly in this codebase, but by adding
# this dependency with this feature we can enforce that openssl is compiled
# in 'vendored' mode all the way down the tree. What this means is that we use
# an openssl implementation from the crate and not from the system. This adds about
# 3mb to the build so it's tagged into the server feature and it's own feature
openssl = {version = "0.10", features = ["vendored"], optional = true}

[dependencies.regex]
version = "1.3"
default-features = false
features = ["std"]

[features]
jemalloc = ["jemallocator"]
bundle_openssl = ["openssl"]
# Features for big iron devices with more ram
server = ["jemalloc", "openssl"]
# disables cors for dash debugging
dash_debug = []
# changes operator urls
operator_debug = []
development = ["dash_debug", "operator_debug"]
